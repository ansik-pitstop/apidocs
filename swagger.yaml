swagger: "2.0"
info:
  title: Pitstop API (External)
  version: "1.0.0"
host: api.pitstop.com
schemes:
  - https
paths:
  #-------------------------------
  # Authentication Endpoints
  #-------------------------------
  /login:
    post:
      summary: User login
      description: Login with username and password.
      tags:
        - Auth
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            required:
              - username
              - password
      responses:
        "200":
          description: Login successful.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        "400":
          $ref: "#/definitions/response400"

  /login/social:
    post:
      summary: Social login
      description: Login using social provider credentials.
      tags:
        - Auth
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
              provider:
                type: string
            required:
              - accessToken
              - provider
      responses:
        "200":
          description: Social login successful.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # User Endpoints
  #-------------------------------
  /v1/user:
    get:
      summary: Get users
      description: Retrieve a list of users. Optionally filter by fleet.
      tags:
        - User
      parameters:
        - name: fleetId
          in: query
          type: number
          required: false
          description: Optional fleet identifier.
      responses:
        "200":
          description: List of users.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create user
      description: Create a new user.
      tags:
        - User
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: User created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Car Endpoints
  #-------------------------------
  /v1/car:
    get:
      summary: Get cars
      description: Retrieve a list of cars. Optionally filter by fleet.
      tags:
        - Car
      parameters:
        - name: fleetId
          in: query
          type: number
          required: false
          description: Optional fleet identifier.
      responses:
        "200":
          description: List of cars.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create car
      description: Create a new car record.
      tags:
        - Car
      parameters:
        - name: car
          in: body
          required: true
          schema:
            $ref: "#/definitions/Car"
      responses:
        "201":
          description: Car created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  /v1/car/{carId}:
    get:
      summary: Get car details
      description: Retrieve detailed information for a specific car.
      tags:
        - Car
      parameters:
        - name: carId
          in: path
          type: number
          required: true
          description: Car identifier.
      responses:
        "200":
          description: Car details.
          schema:
            $ref: "#/definitions/Car"

  #-------------------------------
  # Trip Endpoints
  #-------------------------------
  /v1/trip:
    get:
      summary: Get trips
      description: Retrieve a list of trips.
      tags:
        - Trip
      parameters:
        - name: vin
          in: query
          type: string
          required: false
          description: Vehicle Identification Number.
      responses:
        "200":
          description: List of trips.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create trip
      description: Record a new trip.
      tags:
        - Trip
      parameters:
        - name: trip
          in: body
          required: true
          schema:
            $ref: "#/definitions/Trip"
      responses:
        "201":
          description: Trip created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Appointment Endpoints
  #-------------------------------
  /v1/fleets/{fleetId}/appointment:
    post:
      summary: Create appointment
      description: Schedule a service appointment for a fleet.
      tags:
        - Appointment
      parameters:
        - name: fleetId
          in: path
          type: number
          required: true
          description: Fleet identifier.
        - name: appointment
          in: body
          required: true
          schema:
            type: object
            properties:
              userId:
                type: number
              carId:
                type: number
              appointmentDetails:
                type: object
                properties:
                  state:
                    type: string
                  startTime:
                    type: string
                  endTime:
                    type: string
                required:
                  - state
                  - startTime
                  - endTime
            required:
              - userId
              - carId
              - appointmentDetails
      responses:
        "200":
          description: Appointment created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  /v1/car/{carId}/appointments:
    get:
      summary: Get car appointments
      description: Retrieve service appointments for a specific car.
      tags:
        - Appointment
      parameters:
        - name: carId
          in: path
          type: number
          required: true
          description: Car identifier.
      responses:
        "200":
          description: List of appointments.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Issues Endpoint
  #-------------------------------
  /v1/issues:
    get:
      summary: Get issues
      description: Retrieve a list of issues (maintenance alerts, warnings, etc.) for a fleet.
      tags:
        - Issue
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
        - name: carId
          in: query
          type: number
          required: false
          description: (Optional) Filter issues by a specific car.
        - name: status
          in: query
          type: string
          required: false
          description: (Optional) Filter by issue status (e.g., new, pending, resolved).
      responses:
        "200":
          description: List of issues.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        "400":
          $ref: "#/definitions/response400"

  #-------------------------------
  # Work Order Endpoints
  #-------------------------------
  /v1/work-orders:
    get:
      summary: Get work orders
      description: Retrieve a list of work orders for a fleet.
      tags:
        - Work Order
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of work orders.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create work order
      description: Create a new work order.
      tags:
        - Work Order
      parameters:
        - name: workOrder
          in: body
          required: true
          schema:
            $ref: "#/definitions/WorkOrder"
      responses:
        "201":
          description: Work order created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  /v1/work-orders/{workOrderId}:
    get:
      summary: Get work order details
      description: Retrieve details for a specific work order.
      tags:
        - Work Order
      parameters:
        - name: workOrderId
          in: path
          type: number
          required: true
          description: Work order identifier.
      responses:
        "200":
          description: Work order details.
          schema:
            $ref: "#/definitions/WorkOrder"
    put:
      summary: Update work order
      description: Update an existing work order.
      tags:
        - Work Order
      parameters:
        - name: workOrderId
          in: path
          type: number
          required: true
          description: Work order identifier.
        - name: workOrder
          in: body
          required: true
          schema:
            $ref: "#/definitions/WorkOrder"
      responses:
        "200":
          description: Work order updated.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Integration Endpoints
  #-------------------------------
  /v1/integrations:
    get:
      summary: Get integrations
      description: Retrieve a list of integrations available for a fleet.
      tags:
        - Integration
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of integrations.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create integration
      description: Create a new integration record.
      tags:
        - Integration
      parameters:
        - name: integration
          in: body
          required: true
          schema:
            $ref: "#/definitions/Integration"
      responses:
        "201":
          description: Integration created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Parts Endpoints
  #-------------------------------
  /v1/parts:
    get:
      summary: Get parts
      description: Retrieve a list of parts for fleet maintenance.
      tags:
        - Parts
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of parts.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create part
      description: Create a new part record.
      tags:
        - Parts
      parameters:
        - name: part
          in: body
          required: true
          schema:
            $ref: "#/definitions/Part"
      responses:
        "201":
          description: Part created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Purchase Order Endpoints
  #-------------------------------
  /v1/purchase-orders:
    get:
      summary: Get purchase orders
      description: Retrieve a list of purchase orders for a fleet.
      tags:
        - Purchase Order
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of purchase orders.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create purchase order
      description: Create a new purchase order.
      tags:
        - Purchase Order
      parameters:
        - name: purchaseOrder
          in: body
          required: true
          schema:
            $ref: "#/definitions/PurchaseOrder"
      responses:
        "201":
          description: Purchase order created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Report Endpoints
  #-------------------------------
  /v1/reports:
    get:
      summary: Get reports
      description: Retrieve a list of reports for a fleet.
      tags:
        - Report
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
        - name: type
          in: query
          type: string
          required: false
          description: Report type filter.
      responses:
        "200":
          description: List of reports.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create report
      description: Create a new report.
      tags:
        - Report
      parameters:
        - name: report
          in: body
          required: true
          schema:
            $ref: "#/definitions/Report"
      responses:
        "201":
          description: Report created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Trailer Endpoints
  #-------------------------------
  /v1/trailers:
    get:
      summary: Get trailers
      description: Retrieve a list of trailers.
      tags:
        - Trailer
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of trailers.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create trailer
      description: Create a new trailer record.
      tags:
        - Trailer
      parameters:
        - name: trailer
          in: body
          required: true
          schema:
            $ref: "#/definitions/Trailer"
      responses:
        "201":
          description: Trailer created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  /v1/trailers/{trailerId}:
    get:
      summary: Get trailer details
      description: Retrieve details for a specific trailer.
      tags:
        - Trailer
      parameters:
        - name: trailerId
          in: path
          type: number
          required: true
          description: Trailer identifier.
      responses:
        "200":
          description: Trailer details.
          schema:
            $ref: "#/definitions/Trailer"

  #-------------------------------
  # Document Upload Endpoints
  #-------------------------------
  /v1/documents:
    post:
      summary: Upload document
      description: Upload a document file.
      tags:
        - Document
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          type: file
          required: true
          description: Document file to upload.
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: Document uploaded.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    get:
      summary: Get documents
      description: Retrieve a list of uploaded documents.
      tags:
        - Document
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of documents.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

  #-------------------------------
  # Warranty Endpoints
  #-------------------------------
  /v1/warranties:
    get:
      summary: Get warranties
      description: Retrieve a list of warranties.
      tags:
        - Warranty
      parameters:
        - name: fleetId
          in: query
          type: number
          required: true
          description: Fleet identifier.
      responses:
        "200":
          description: List of warranties.
          schema:
            $ref: "#/definitions/HelloWorldResponse"
    post:
      summary: Create warranty
      description: Create a new warranty record.
      tags:
        - Warranty
      parameters:
        - name: warranty
          in: body
          required: true
          schema:
            $ref: "#/definitions/Warranty"
      responses:
        "201":
          description: Warranty created.
          schema:
            $ref: "#/definitions/HelloWorldResponse"

securityDefinitions: {}

definitions:
  HelloWorldResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      error:
        type: string
      message:
        type: string
  User:
    type: object
    properties:
      _id:
        type: number
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      username:
        type: string
  Car:
    type: object
    properties:
      _id:
        type: number
      vin:
        type: string
      licensePlate:
        type: string
      baseMileage:
        type: number
  Trip:
    type: object
    properties:
      tripId:
        type: string
      locationStart:
        $ref: "#/definitions/GeoPoint"
      locationEnd:
        $ref: "#/definitions/GeoPoint"
      mileageStart:
        type: number
      mileageAccum:
        type: number
      timeStart:
        type: string
      timeEnd:
        type: string
      vin:
        type: string
  GeoPoint:
    type: object
    properties:
      altitude:
        type: number
      latitude:
        type: number
      longitude:
        type: number
  WorkOrder:
    type: object
    properties:
      _id:
        type: number
      fleetId:
        type: number
      carId:
        type: number
      description:
        type: string
      status:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  Integration:
    type: object
    properties:
      _id:
        type: number
      fleetId:
        type: number
      name:
        type: string
      type:
        type: string
      status:
        type: string
      details:
        type: object
  Part:
    type: object
    properties:
      _id:
        type: number
      fleetId:
        type: number
      partNumber:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: number
      quantity:
        type: number
  PurchaseOrder:
    type: object
    properties:
      _id:
        type: number
      fleetId:
        type: number
      orderNumber:
        type: string
      date:
        type: string
      amount:
        type: number
      items:
        type: array
        items:
          type: object
          properties:
            partId:
              type: number
            quantity:
              type: number
  Report:
    type: object
    properties:
      _id:
        type: number
      fleetId:
        type: number
      reportType:
        type: string
      content:
        type: object
      isInternal:
        type: boolean
      createdAt:
        type: string
  Trailer:
    type: object
    properties:
      _id:
        type: number
      vin:
        type: string
      unitId:
        type: string
      mileage:
        type: number
      make:
        type: string
      model:
        type: string
      year:
        type: number
      location:
        $ref: "#/definitions/GeoPoint"
  Warranty:
    type: object
    properties:
      _id:
        type: number
      fleetId:
        type: number
      warrantyNumber:
        type: string
      description:
        type: string
      startDate:
        type: string
      endDate:
        type: string
      carId:
        type: number
